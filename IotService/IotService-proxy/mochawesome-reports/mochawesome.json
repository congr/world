{
  "stats": {
    "suites": 7,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2017-03-14T11:11:19.165Z",
    "end": "2017-03-14T11:11:21.697Z",
    "duration": 2532,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "** [pkg1.6] CRUD sensor **",
        "suites": [
          {
            "title": "Chakram",
            "suites": [],
            "tests": [
              {
                "title": "testing framework is ok?",
                "fullTitle": "** [pkg1.6] CRUD sensor ** Chakram testing framework is ok?",
                "timedOut": false,
                "duration": 737,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const response = chakram.get(\"http://google.com\");\n            expect(response).to.have.status(200);\n            expect(response).not.to.have.header('non-existing-header');\n            return chakram.wait();",
                "err": {},
                "isRoot": false,
                "uuid": "8fd4bf37-92a1-4c5a-bb65-ba8f3e6c4e2a",
                "parentUUID": "ce48254c-c1b5-4f0f-a025-b40d6a1ccff8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/pkg16-crud-sensor.js",
            "uuid": "ce48254c-c1b5-4f0f-a025-b40d6a1ccff8",
            "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
            "passes": [
              {
                "title": "testing framework is ok?",
                "fullTitle": "** [pkg1.6] CRUD sensor ** Chakram testing framework is ok?",
                "timedOut": false,
                "duration": 737,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const response = chakram.get(\"http://google.com\");\n            expect(response).to.have.status(200);\n            expect(response).not.to.have.header('non-existing-header');\n            return chakram.wait();",
                "err": {},
                "isRoot": false,
                "uuid": "8fd4bf37-92a1-4c5a-bb65-ba8f3e6c4e2a",
                "parentUUID": "ce48254c-c1b5-4f0f-a025-b40d6a1ccff8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 737,
            "rootEmpty": false
          },
          {
            "title": "create-sensor-config",
            "suites": [],
            "tests": [
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** create-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 946,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "b39b70e2-a978-4fb0-9c00-721c8cc4dc1c",
                "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
                "skipped": false
              },
              {
                "title": "should specify '{result : 1}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** create-sensor-config should specify '{result : 1}' in the response body",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result', '1');",
                "err": {},
                "isRoot": false,
                "uuid": "f5af207f-7a88-4146-9402-8675496d0d06",
                "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/pkg16-crud-sensor.js",
            "uuid": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
            "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
            "passes": [
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** create-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 946,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "b39b70e2-a978-4fb0-9c00-721c8cc4dc1c",
                "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
                "skipped": false
              },
              {
                "title": "should specify '{result : 1}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** create-sensor-config should specify '{result : 1}' in the response body",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result', '1');",
                "err": {},
                "isRoot": false,
                "uuid": "f5af207f-7a88-4146-9402-8675496d0d06",
                "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 947,
            "rootEmpty": false
          },
          {
            "title": "update-sensor-config",
            "suites": [],
            "tests": [
              {
                "title": "update sensor",
                "fullTitle": "** [pkg1.6] CRUD sensor ** update-sensor-config update sensor",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response= chakram.post(URL_PROXY_UPDATE, data.UPDATE_SENSOR)\nreturn chakram.wait();",
                "err": {},
                "isRoot": false,
                "uuid": "f652500f-5271-4e6f-b673-e157041ed2ff",
                "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
                "skipped": false
              },
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** update-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "1a09972e-1ddd-4967-a0cb-1eed4c34c978",
                "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
                "skipped": false
              },
              {
                "title": "should specify '{result : 1}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** update-sensor-config should specify '{result : 1}' in the response body",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result', '1');",
                "err": {},
                "isRoot": false,
                "uuid": "c19bc90a-a62f-404b-9069-cf318a1c3bea",
                "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/pkg16-crud-sensor.js",
            "uuid": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
            "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
            "passes": [
              {
                "title": "update sensor",
                "fullTitle": "** [pkg1.6] CRUD sensor ** update-sensor-config update sensor",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response= chakram.post(URL_PROXY_UPDATE, data.UPDATE_SENSOR)\nreturn chakram.wait();",
                "err": {},
                "isRoot": false,
                "uuid": "f652500f-5271-4e6f-b673-e157041ed2ff",
                "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
                "skipped": false
              },
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** update-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 295,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "1a09972e-1ddd-4967-a0cb-1eed4c34c978",
                "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
                "skipped": false
              },
              {
                "title": "should specify '{result : 1}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** update-sensor-config should specify '{result : 1}' in the response body",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result', '1');",
                "err": {},
                "isRoot": false,
                "uuid": "c19bc90a-a62f-404b-9069-cf318a1c3bea",
                "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 295,
            "rootEmpty": false
          },
          {
            "title": "lookup-sensor-config",
            "suites": [],
            "tests": [
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** lookup-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "abf12ea6-c0e1-47e6-b028-ea37523707c2",
                "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
                "skipped": false
              },
              {
                "title": "should specify '{result : {settings: .. }}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** lookup-sensor-config should specify '{result : {settings: .. }}' in the response body",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.schema('result', {\n    \"required\": [\n        \"settings\"\n    ]\n});",
                "err": {},
                "isRoot": false,
                "uuid": "42ae1eed-8242-4860-bbd5-82646df94cac",
                "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
                "skipped": false
              },
              {
                "title": "should specify the updated setting params in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** lookup-sensor-config should specify the updated setting params in the response body",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result.settings', data.UPDATE_SENSOR.params.settings);",
                "err": {},
                "isRoot": false,
                "uuid": "d6f56035-bca1-4148-8177-2b320932b4ac",
                "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/pkg16-crud-sensor.js",
            "uuid": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
            "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
            "passes": [
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** lookup-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 269,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "abf12ea6-c0e1-47e6-b028-ea37523707c2",
                "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
                "skipped": false
              },
              {
                "title": "should specify '{result : {settings: .. }}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** lookup-sensor-config should specify '{result : {settings: .. }}' in the response body",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.schema('result', {\n    \"required\": [\n        \"settings\"\n    ]\n});",
                "err": {},
                "isRoot": false,
                "uuid": "42ae1eed-8242-4860-bbd5-82646df94cac",
                "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
                "skipped": false
              },
              {
                "title": "should specify the updated setting params in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** lookup-sensor-config should specify the updated setting params in the response body",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result.settings', data.UPDATE_SENSOR.params.settings);",
                "err": {},
                "isRoot": false,
                "uuid": "d6f56035-bca1-4148-8177-2b320932b4ac",
                "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 273,
            "rootEmpty": false
          },
          {
            "title": "delete-sensor-config",
            "suites": [],
            "tests": [
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** delete-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 239,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "caf286aa-dfdf-4fb4-84c4-65a59490e0b5",
                "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
                "skipped": false
              },
              {
                "title": "should specify '{result : 1}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** delete-sensor-config should specify '{result : 1}' in the response body",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result', '1');",
                "err": {},
                "isRoot": false,
                "uuid": "7abde6b7-98da-495d-b137-baee8691e4ac",
                "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
                "skipped": false
              },
              {
                "title": "lookup-sensor-config : should have no sensor ",
                "fullTitle": "** [pkg1.6] CRUD sensor ** delete-sensor-config lookup-sensor-config : should have no sensor ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
                "err": {},
                "isRoot": false,
                "uuid": "3347fc2b-c881-438d-af42-1a4aca6e9b09",
                "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/pkg16-crud-sensor.js",
            "uuid": "faab7781-5ef4-4c8c-b024-eace166c369e",
            "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
            "passes": [
              {
                "title": "should return 200 on success",
                "fullTitle": "** [pkg1.6] CRUD sensor ** delete-sensor-config should return 200 on success",
                "timedOut": false,
                "duration": 239,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.status(200);",
                "err": {},
                "isRoot": false,
                "uuid": "caf286aa-dfdf-4fb4-84c4-65a59490e0b5",
                "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
                "skipped": false
              },
              {
                "title": "should specify '{result : 1}' in the response body",
                "fullTitle": "** [pkg1.6] CRUD sensor ** delete-sensor-config should specify '{result : 1}' in the response body",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "return expect(response).to.have.json('result', '1');",
                "err": {},
                "isRoot": false,
                "uuid": "7abde6b7-98da-495d-b137-baee8691e4ac",
                "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
                "skipped": false
              },
              {
                "title": "lookup-sensor-config : should have no sensor ",
                "fullTitle": "** [pkg1.6] CRUD sensor ** delete-sensor-config lookup-sensor-config : should have no sensor ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
                "err": {},
                "isRoot": false,
                "uuid": "3347fc2b-c881-438d-af42-1a4aca6e9b09",
                "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 240,
            "rootEmpty": false
          },
          {
            "title": "reset-sensor-config",
            "suites": [],
            "tests": [
              {
                "title": "condition1] create-sensor-config",
                "fullTitle": "** [pkg1.6] CRUD sensor ** reset-sensor-config condition1] create-sensor-config",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR)\n    .then(response => expect(response).to.have.json('result', '1'));",
                "err": {},
                "isRoot": false,
                "uuid": "49852680-be9c-46a8-a28a-f32373d541ca",
                "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
                "skipped": false
              },
              {
                "title": "condition2] create-sensor-config with other user",
                "fullTitle": "** [pkg1.6] CRUD sensor ** reset-sensor-config condition2] create-sensor-config with other user",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR_OTHER)\n    .then(response => expect(response).to.have.json('result', '1'));",
                "err": {},
                "isRoot": false,
                "uuid": "81f18582-3b12-40be-9632-580c7d57e36b",
                "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
                "skipped": false
              },
              {
                "title": "lookup-sensor-config : should have no sensor ",
                "fullTitle": "** [pkg1.6] CRUD sensor ** reset-sensor-config lookup-sensor-config : should have no sensor ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
                "err": {},
                "isRoot": false,
                "uuid": "832e5616-a6c4-45c9-b065-00147a4b985d",
                "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/pkg16-crud-sensor.js",
            "uuid": "d673a513-1109-4a05-8391-b854a9af1de8",
            "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
            "passes": [
              {
                "title": "condition1] create-sensor-config",
                "fullTitle": "** [pkg1.6] CRUD sensor ** reset-sensor-config condition1] create-sensor-config",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR)\n    .then(response => expect(response).to.have.json('result', '1'));",
                "err": {},
                "isRoot": false,
                "uuid": "49852680-be9c-46a8-a28a-f32373d541ca",
                "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
                "skipped": false
              },
              {
                "title": "condition2] create-sensor-config with other user",
                "fullTitle": "** [pkg1.6] CRUD sensor ** reset-sensor-config condition2] create-sensor-config with other user",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR_OTHER)\n    .then(response => expect(response).to.have.json('result', '1'));",
                "err": {},
                "isRoot": false,
                "uuid": "81f18582-3b12-40be-9632-580c7d57e36b",
                "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
                "skipped": false
              },
              {
                "title": "lookup-sensor-config : should have no sensor ",
                "fullTitle": "** [pkg1.6] CRUD sensor ** reset-sensor-config lookup-sensor-config : should have no sensor ",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
                "err": {},
                "isRoot": false,
                "uuid": "832e5616-a6c4-45c9-b065-00147a4b985d",
                "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/pkg16-crud-sensor.js",
        "uuid": "24e2faf5-3dd9-49f1-bff9-b0863759bcf3",
        "fullFile": "/Users/cutececil/AWS/IotService/IotService-proxy/test/pkg16-crud-sensor.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "adbe9370-fd95-40d9-b2c4-3f29cf9224a4",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "testing framework is ok?",
      "fullTitle": "Chakram testing framework is ok?",
      "timedOut": false,
      "duration": 737,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const response = chakram.get(\"http://google.com\");\n            expect(response).to.have.status(200);\n            expect(response).not.to.have.header('non-existing-header');\n            return chakram.wait();",
      "err": {},
      "isRoot": false,
      "uuid": "8fd4bf37-92a1-4c5a-bb65-ba8f3e6c4e2a",
      "parentUUID": "ce48254c-c1b5-4f0f-a025-b40d6a1ccff8",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "create-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 946,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "b39b70e2-a978-4fb0-9c00-721c8cc4dc1c",
      "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
      "skipped": false
    },
    {
      "title": "should specify '{result : 1}' in the response body",
      "fullTitle": "create-sensor-config should specify '{result : 1}' in the response body",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result', '1');",
      "err": {},
      "isRoot": false,
      "uuid": "f5af207f-7a88-4146-9402-8675496d0d06",
      "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
      "skipped": false
    },
    {
      "title": "update sensor",
      "fullTitle": "update-sensor-config update sensor",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response= chakram.post(URL_PROXY_UPDATE, data.UPDATE_SENSOR)\nreturn chakram.wait();",
      "err": {},
      "isRoot": false,
      "uuid": "f652500f-5271-4e6f-b673-e157041ed2ff",
      "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "update-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 295,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "1a09972e-1ddd-4967-a0cb-1eed4c34c978",
      "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
      "skipped": false
    },
    {
      "title": "should specify '{result : 1}' in the response body",
      "fullTitle": "update-sensor-config should specify '{result : 1}' in the response body",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result', '1');",
      "err": {},
      "isRoot": false,
      "uuid": "c19bc90a-a62f-404b-9069-cf318a1c3bea",
      "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "lookup-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 269,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "abf12ea6-c0e1-47e6-b028-ea37523707c2",
      "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
      "skipped": false
    },
    {
      "title": "should specify '{result : {settings: .. }}' in the response body",
      "fullTitle": "lookup-sensor-config should specify '{result : {settings: .. }}' in the response body",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.schema('result', {\n    \"required\": [\n        \"settings\"\n    ]\n});",
      "err": {},
      "isRoot": false,
      "uuid": "42ae1eed-8242-4860-bbd5-82646df94cac",
      "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
      "skipped": false
    },
    {
      "title": "should specify the updated setting params in the response body",
      "fullTitle": "lookup-sensor-config should specify the updated setting params in the response body",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result.settings', data.UPDATE_SENSOR.params.settings);",
      "err": {},
      "isRoot": false,
      "uuid": "d6f56035-bca1-4148-8177-2b320932b4ac",
      "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "delete-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 239,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "caf286aa-dfdf-4fb4-84c4-65a59490e0b5",
      "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
      "skipped": false
    },
    {
      "title": "should specify '{result : 1}' in the response body",
      "fullTitle": "delete-sensor-config should specify '{result : 1}' in the response body",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result', '1');",
      "err": {},
      "isRoot": false,
      "uuid": "7abde6b7-98da-495d-b137-baee8691e4ac",
      "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
      "skipped": false
    },
    {
      "title": "lookup-sensor-config : should have no sensor ",
      "fullTitle": "delete-sensor-config lookup-sensor-config : should have no sensor ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
      "err": {},
      "isRoot": false,
      "uuid": "3347fc2b-c881-438d-af42-1a4aca6e9b09",
      "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
      "skipped": false
    },
    {
      "title": "condition1] create-sensor-config",
      "fullTitle": "reset-sensor-config condition1] create-sensor-config",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR)\n    .then(response => expect(response).to.have.json('result', '1'));",
      "err": {},
      "isRoot": false,
      "uuid": "49852680-be9c-46a8-a28a-f32373d541ca",
      "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
      "skipped": false
    },
    {
      "title": "condition2] create-sensor-config with other user",
      "fullTitle": "reset-sensor-config condition2] create-sensor-config with other user",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR_OTHER)\n    .then(response => expect(response).to.have.json('result', '1'));",
      "err": {},
      "isRoot": false,
      "uuid": "81f18582-3b12-40be-9632-580c7d57e36b",
      "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
      "skipped": false
    },
    {
      "title": "lookup-sensor-config : should have no sensor ",
      "fullTitle": "reset-sensor-config lookup-sensor-config : should have no sensor ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
      "err": {},
      "isRoot": false,
      "uuid": "832e5616-a6c4-45c9-b065-00147a4b985d",
      "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "testing framework is ok?",
      "fullTitle": "Chakram testing framework is ok?",
      "timedOut": false,
      "duration": 737,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "const response = chakram.get(\"http://google.com\");\n            expect(response).to.have.status(200);\n            expect(response).not.to.have.header('non-existing-header');\n            return chakram.wait();",
      "err": {},
      "isRoot": false,
      "uuid": "8fd4bf37-92a1-4c5a-bb65-ba8f3e6c4e2a",
      "parentUUID": "ce48254c-c1b5-4f0f-a025-b40d6a1ccff8",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "create-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 946,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "b39b70e2-a978-4fb0-9c00-721c8cc4dc1c",
      "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
      "skipped": false
    },
    {
      "title": "should specify '{result : 1}' in the response body",
      "fullTitle": "create-sensor-config should specify '{result : 1}' in the response body",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result', '1');",
      "err": {},
      "isRoot": false,
      "uuid": "f5af207f-7a88-4146-9402-8675496d0d06",
      "parentUUID": "3f5f8b6f-bce4-4710-9cd4-71fcd17e9169",
      "skipped": false
    },
    {
      "title": "update sensor",
      "fullTitle": "update-sensor-config update sensor",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response= chakram.post(URL_PROXY_UPDATE, data.UPDATE_SENSOR)\nreturn chakram.wait();",
      "err": {},
      "isRoot": false,
      "uuid": "f652500f-5271-4e6f-b673-e157041ed2ff",
      "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "update-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 295,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "1a09972e-1ddd-4967-a0cb-1eed4c34c978",
      "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
      "skipped": false
    },
    {
      "title": "should specify '{result : 1}' in the response body",
      "fullTitle": "update-sensor-config should specify '{result : 1}' in the response body",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result', '1');",
      "err": {},
      "isRoot": false,
      "uuid": "c19bc90a-a62f-404b-9069-cf318a1c3bea",
      "parentUUID": "0c9af98b-2d3a-4892-83af-83634c06d1b6",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "lookup-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 269,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "abf12ea6-c0e1-47e6-b028-ea37523707c2",
      "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
      "skipped": false
    },
    {
      "title": "should specify '{result : {settings: .. }}' in the response body",
      "fullTitle": "lookup-sensor-config should specify '{result : {settings: .. }}' in the response body",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.schema('result', {\n    \"required\": [\n        \"settings\"\n    ]\n});",
      "err": {},
      "isRoot": false,
      "uuid": "42ae1eed-8242-4860-bbd5-82646df94cac",
      "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
      "skipped": false
    },
    {
      "title": "should specify the updated setting params in the response body",
      "fullTitle": "lookup-sensor-config should specify the updated setting params in the response body",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result.settings', data.UPDATE_SENSOR.params.settings);",
      "err": {},
      "isRoot": false,
      "uuid": "d6f56035-bca1-4148-8177-2b320932b4ac",
      "parentUUID": "5899a02f-87a8-4713-8ac8-aadff07cbbde",
      "skipped": false
    },
    {
      "title": "should return 200 on success",
      "fullTitle": "delete-sensor-config should return 200 on success",
      "timedOut": false,
      "duration": 239,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.status(200);",
      "err": {},
      "isRoot": false,
      "uuid": "caf286aa-dfdf-4fb4-84c4-65a59490e0b5",
      "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
      "skipped": false
    },
    {
      "title": "should specify '{result : 1}' in the response body",
      "fullTitle": "delete-sensor-config should specify '{result : 1}' in the response body",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "return expect(response).to.have.json('result', '1');",
      "err": {},
      "isRoot": false,
      "uuid": "7abde6b7-98da-495d-b137-baee8691e4ac",
      "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
      "skipped": false
    },
    {
      "title": "lookup-sensor-config : should have no sensor ",
      "fullTitle": "delete-sensor-config lookup-sensor-config : should have no sensor ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
      "err": {},
      "isRoot": false,
      "uuid": "3347fc2b-c881-438d-af42-1a4aca6e9b09",
      "parentUUID": "faab7781-5ef4-4c8c-b024-eace166c369e",
      "skipped": false
    },
    {
      "title": "condition1] create-sensor-config",
      "fullTitle": "reset-sensor-config condition1] create-sensor-config",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR)\n    .then(response => expect(response).to.have.json('result', '1'));",
      "err": {},
      "isRoot": false,
      "uuid": "49852680-be9c-46a8-a28a-f32373d541ca",
      "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
      "skipped": false
    },
    {
      "title": "condition2] create-sensor-config with other user",
      "fullTitle": "reset-sensor-config condition2] create-sensor-config with other user",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chakram.post(URL_PROXY_UPDATE, data.CREATE_SENSOR_OTHER)\n    .then(response => expect(response).to.have.json('result', '1'));",
      "err": {},
      "isRoot": false,
      "uuid": "81f18582-3b12-40be-9632-580c7d57e36b",
      "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
      "skipped": false
    },
    {
      "title": "lookup-sensor-config : should have no sensor ",
      "fullTitle": "reset-sensor-config lookup-sensor-config : should have no sensor ",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "response = chakram.post(URL_PROXY_LOOKUP, data.LOOKUP_SENSOR)\n    .then(res => expect(res).not.to.have.status(200));",
      "err": {},
      "isRoot": false,
      "uuid": "832e5616-a6c4-45c9-b065-00147a4b985d",
      "parentUUID": "d673a513-1109-4a05-8391-b854a9af1de8",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}